import React, { useEffect, useState } from "react";
import axios from "axios";
import "./App.css";

const API_URL = "http://localhost:8080/tasks";

function App() {
  const [tasks, setTasks] = useState([]);
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");

  // L·∫•y danh s√°ch c√¥ng vi·ªác t·ª´ API
  useEffect(() => {
    fetchTasks();
  }, []);

  const fetchTasks = async () => {
    try {
      const response = await axios.get(API_URL);

      // Ki·ªÉm tra d·ªØ li·ªáu API tr∆∞·ªõc khi c·∫≠p nh·∫≠t state
      if (response.data && Array.isArray(response.data)) {
        setTasks(response.data);
      } else {
        console.error("L·ªói: API kh√¥ng tr·∫£ v·ªÅ m·∫£ng h·ª£p l·ªá", response.data);
        setTasks([]); // ƒê·ªÉ tr√°nh l·ªói khi render
      }
    } catch (error) {
      console.error("L·ªói khi l·∫•y danh s√°ch c√¥ng vi·ªác:", error);
      setTasks([]); // N·∫øu API l·ªói, tr√°nh l·ªói khi render
    }
  };

  // Th√™m c√¥ng vi·ªác m·ªõi
  const addTask = async () => {
    if (!title.trim()) {
      alert("Ti√™u ƒë·ªÅ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return;
    }

    try {
      const response = await axios.post(API_URL, { title, description });

      // Ki·ªÉm tra API ph·∫£n h·ªìi h·ª£p l·ªá
      if (response.data && response.data.id) {
        setTasks([...tasks, response.data]);
        setTitle("");
        setDescription("");
      } else {
        console.error("L·ªói: API tr·∫£ v·ªÅ d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá", response.data);
      }
    } catch (error) {
      console.error("L·ªói khi th√™m c√¥ng vi·ªác:", error);
    }
  };

  // C·∫≠p nh·∫≠t tr·∫°ng th√°i ho√†n th√†nh
  const toggleTaskCompletion = async (id, completed, title) => {
    try {
      const response = await axios.put(`${API_URL}/${id}`, { 
        completed: !completed, 
        //title 
      });
  
      // C·∫≠p nh·∫≠t l·∫°i danh s√°ch task v·ªõi d·ªØ li·ªáu t·ª´ server
      setTasks(tasks.map((task) => 
        task.id === id ? response.data : task
      ));
    } catch (error) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t c√¥ng vi·ªác:", error);
    }
  };
  

  // X√≥a c√¥ng vi·ªác
  const deleteTask = async (id) => {
    const isConfirmed = window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a c√¥ng vi·ªác n√†y kh√¥ng?");
    if (!isConfirmed) return; // N·∫øu ng∆∞·ªùi d√πng kh√¥ng ƒë·ªìng √Ω th√¨ d·ª´ng l·∫°i

    try {
      await axios.delete(`${API_URL}/${id}`);
      
      // G·ªçi l·∫°i API ƒë·ªÉ ƒë·∫£m b·∫£o d·ªØ li·ªáu ƒë·ªìng b·ªô v·ªõi backend
      fetchTasks();
    } catch (error) {
      console.error("L·ªói khi x√≥a c√¥ng vi·ªác:", error);
    }
  };

  

  return (
    <div className="container">
      <h1>üìå Qu·∫£n l√Ω C√¥ng vi·ªác</h1>

      {/* Form th√™m c√¥ng vi·ªác */}
      <div className="add-task">
        <input
          type="text"
          placeholder="Ti√™u ƒë·ªÅ c√¥ng vi·ªác"
          value={title}
          onChange={(e) => setTitle(e.target.value)}
        />
        <input
          type="text"
          placeholder="M√¥ t·∫£ c√¥ng vi·ªác"
          value={description}
          onChange={(e) => setDescription(e.target.value)}
        />
        <button onClick={addTask}>‚ûï Th√™m</button>
      </div>

      {/* Danh s√°ch c√¥ng vi·ªác */}
      <ul className="task-list">
        {tasks.length === 0 ? (
          <p>Ch∆∞a c√≥ c√¥ng vi·ªác n√†o! ‚ú®</p>
        ) : (
          tasks.map((task) => (
            <li key={task.id} className={task.completed ? "completed" : ""}>
              <span onClick={() => toggleTaskCompletion(task.id, task.completed)}>
                {task.completed ? "‚úÖ" : "‚¨ú"} {task.title}
              </span>
              <button className="delete" onClick={() => deleteTask(task.id)}>‚ùå</button>
            </li>
          ))
        )}
      </ul>
    </div>
  );
}

export default App;
